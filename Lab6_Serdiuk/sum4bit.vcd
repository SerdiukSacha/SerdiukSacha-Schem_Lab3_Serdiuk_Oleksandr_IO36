$date
	Tue Jun 24 17:48:37 2025
$end
$version
	ModelSim Version 6.5b
$end
$timescale
	1ps
$end
$scope module tb_sum4bit $end
$var reg 4 ! A [3:0] $end
$var reg 4 " B [3:0] $end
$var reg 1 # cin $end
$var wire 1 $ S_dut [3] $end
$var wire 1 % S_dut [2] $end
$var wire 1 & S_dut [1] $end
$var wire 1 ' S_dut [0] $end
$var wire 1 ( S_ref [3] $end
$var wire 1 ) S_ref [2] $end
$var wire 1 * S_ref [1] $end
$var wire 1 + S_ref [0] $end
$var wire 1 , cout_dut $end
$var wire 1 - cout_ref $end
$scope task apply_and_print $end
$var reg 4 . a [3:0] $end
$var reg 4 / b [3:0] $end
$var reg 1 0 c $end
$upscope $end
$scope module dut $end
$var wire 1 1 A [3] $end
$var wire 1 2 A [2] $end
$var wire 1 3 A [1] $end
$var wire 1 4 A [0] $end
$var wire 1 5 B [3] $end
$var wire 1 6 B [2] $end
$var wire 1 7 B [1] $end
$var wire 1 8 B [0] $end
$var wire 1 9 cin $end
$var wire 1 $ S [3] $end
$var wire 1 % S [2] $end
$var wire 1 & S [1] $end
$var wire 1 ' S [0] $end
$var wire 1 , cout $end
$var wire 1 : c1 $end
$var wire 1 ; c2 $end
$var wire 1 < c3 $end
$scope module fa0 $end
$var wire 1 4 a $end
$var wire 1 8 b $end
$var wire 1 9 cin $end
$var wire 1 ' sum $end
$var wire 1 : cout $end
$upscope $end
$scope module fa1 $end
$var wire 1 3 a $end
$var wire 1 7 b $end
$var wire 1 : cin $end
$var wire 1 & sum $end
$var wire 1 ; cout $end
$upscope $end
$scope module fa2 $end
$var wire 1 2 a $end
$var wire 1 6 b $end
$var wire 1 ; cin $end
$var wire 1 % sum $end
$var wire 1 < cout $end
$upscope $end
$scope module fa3 $end
$var wire 1 1 a $end
$var wire 1 5 b $end
$var wire 1 < cin $end
$var wire 1 $ sum $end
$var wire 1 , cout $end
$upscope $end
$upscope $end
$scope module ref $end
$var wire 1 = A [3] $end
$var wire 1 > A [2] $end
$var wire 1 ? A [1] $end
$var wire 1 @ A [0] $end
$var wire 1 A B [3] $end
$var wire 1 B B [2] $end
$var wire 1 C B [1] $end
$var wire 1 D B [0] $end
$var wire 1 E cin $end
$var wire 1 ( S [3] $end
$var wire 1 ) S [2] $end
$var wire 1 * S [1] $end
$var wire 1 + S [0] $end
$var wire 1 - cout $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
b0 "
0#
b0 .
b0 /
00
0'
0&
0%
0$
0+
0*
0)
0(
0,
0-
0:
0;
0<
0E
0D
0C
0B
0A
0@
0?
0>
0=
09
08
07
06
05
04
03
02
01
$end
#5000
b101 .
b11 /
b11 "
b101 !
1@
1>
14
12
1D
1C
18
17
1(
1:
1%
1&
1;
0&
1<
0%
1$
#10000
b1111 .
b1 /
b1 "
b1111 !
1?
1=
13
11
0C
07
0(
1-
1,
0$
#15000
b1010 .
b101 /
10
1#
b101 "
b1010 !
19
1E
0@
0>
04
02
1B
16
