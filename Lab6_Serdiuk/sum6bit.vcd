$date
	Tue Jun 24 17:50:27 2025
$end
$version
	ModelSim Version 6.5b
$end
$timescale
	1ps
$end
$scope module tb_sum6bit $end
$var reg 6 ! A [5:0] $end
$var reg 6 " B [5:0] $end
$var reg 1 # cin $end
$var wire 1 $ S_dut [5] $end
$var wire 1 % S_dut [4] $end
$var wire 1 & S_dut [3] $end
$var wire 1 ' S_dut [2] $end
$var wire 1 ( S_dut [1] $end
$var wire 1 ) S_dut [0] $end
$var wire 1 * S_ref [5] $end
$var wire 1 + S_ref [4] $end
$var wire 1 , S_ref [3] $end
$var wire 1 - S_ref [2] $end
$var wire 1 . S_ref [1] $end
$var wire 1 / S_ref [0] $end
$var wire 1 0 cout_dut $end
$var wire 1 1 cout_ref $end
$scope task apply_and_print $end
$var reg 6 2 a [5:0] $end
$var reg 6 3 b [5:0] $end
$var reg 1 4 c $end
$upscope $end
$scope module dut $end
$var wire 1 5 A [5] $end
$var wire 1 6 A [4] $end
$var wire 1 7 A [3] $end
$var wire 1 8 A [2] $end
$var wire 1 9 A [1] $end
$var wire 1 : A [0] $end
$var wire 1 ; B [5] $end
$var wire 1 < B [4] $end
$var wire 1 = B [3] $end
$var wire 1 > B [2] $end
$var wire 1 ? B [1] $end
$var wire 1 @ B [0] $end
$var wire 1 A cin $end
$var wire 1 $ S [5] $end
$var wire 1 % S [4] $end
$var wire 1 & S [3] $end
$var wire 1 ' S [2] $end
$var wire 1 ( S [1] $end
$var wire 1 ) S [0] $end
$var wire 1 0 cout $end
$var wire 1 B c1 $end
$var wire 1 C c2 $end
$var wire 1 D c3 $end
$var wire 1 E c4 $end
$var wire 1 F c5 $end
$scope module fa0 $end
$var wire 1 : a $end
$var wire 1 @ b $end
$var wire 1 A cin $end
$var wire 1 ) sum $end
$var wire 1 B cout $end
$upscope $end
$scope module fa1 $end
$var wire 1 9 a $end
$var wire 1 ? b $end
$var wire 1 B cin $end
$var wire 1 ( sum $end
$var wire 1 C cout $end
$upscope $end
$scope module fa2 $end
$var wire 1 8 a $end
$var wire 1 > b $end
$var wire 1 C cin $end
$var wire 1 ' sum $end
$var wire 1 D cout $end
$upscope $end
$scope module fa3 $end
$var wire 1 7 a $end
$var wire 1 = b $end
$var wire 1 D cin $end
$var wire 1 & sum $end
$var wire 1 E cout $end
$upscope $end
$scope module fa4 $end
$var wire 1 6 a $end
$var wire 1 < b $end
$var wire 1 E cin $end
$var wire 1 % sum $end
$var wire 1 F cout $end
$upscope $end
$scope module fa5 $end
$var wire 1 5 a $end
$var wire 1 ; b $end
$var wire 1 F cin $end
$var wire 1 $ sum $end
$var wire 1 0 cout $end
$upscope $end
$upscope $end
$scope module ref $end
$var wire 1 G A [5] $end
$var wire 1 H A [4] $end
$var wire 1 I A [3] $end
$var wire 1 J A [2] $end
$var wire 1 K A [1] $end
$var wire 1 L A [0] $end
$var wire 1 M B [5] $end
$var wire 1 N B [4] $end
$var wire 1 O B [3] $end
$var wire 1 P B [2] $end
$var wire 1 Q B [1] $end
$var wire 1 R B [0] $end
$var wire 1 S cin $end
$var wire 1 * S [5] $end
$var wire 1 + S [4] $end
$var wire 1 , S [3] $end
$var wire 1 - S [2] $end
$var wire 1 . S [1] $end
$var wire 1 / S [0] $end
$var wire 1 1 cout $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
b0 "
0#
b0 2
b0 3
04
0)
0(
0'
0&
0%
0$
0/
0.
0-
0,
0+
0*
00
01
0B
0C
0D
0E
0F
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
$end
#5000
b101 2
b1011 3
b1011 "
b101 !
1L
1J
1:
18
1R
1Q
1O
1@
1?
1=
1+
1B
1'
1(
1&
1C
0(
1D
0'
1E
0&
1%
#10000
b111111 2
b1 3
b1 "
b111111 !
1K
1I
1H
1G
19
17
16
15
0Q
0O
0?
0=
0+
11
1F
0%
1$
10
0$
#15000
b101010 2
b10101 3
14
1#
b10101 "
b101010 !
1A
1S
0L
0J
0H
0:
08
06
1P
1N
1>
1<
